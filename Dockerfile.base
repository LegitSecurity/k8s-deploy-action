ARG ALPINE_VERSION=3.16

FROM python:3.10.8-alpine${ALPINE_VERSION} as builder

# Install build dependencies
RUN apk add --no-cache git unzip groff build-base libffi-dev cmake wget git curl bash yq

# Clone awscli (replaced with official install)
ARG AWS_CLI_VERSION=2.15.10
RUN curl -s "https://awscli.amazonaws.com/awscli-exe-linux-x86_64-${AWS_CLI_VERSION}.zip" -o awscliv2.zip && \
    unzip awscliv2.zip && \
    ./aws/install --bin-dir /aws-cli-bin && \
    /aws-cli-bin/aws --version

# Remove examples as unnecessary
RUN rm -rf /usr/local/aws-cli/v2/current/dist/awscli/examples || true
RUN find /usr/local/aws-cli/v2/current/dist/awscli/botocore/data -name examples-1.json -delete || true

# Get helm binary
WORKDIR /helm
RUN wget https://get.helm.sh/helm-v3.12.1-linux-amd64.tar.gz -O - | tar -xz && \
    mv linux-amd64/helm /usr/bin/helm && \
    chmod +x /usr/bin/helm

# Get kubectl binary
WORKDIR /kubectl
RUN wget https://storage.googleapis.com/kubernetes-release/release/v1.27.3/bin/linux/amd64/kubectl && \
    mv kubectl /usr/bin/kubectl && \
    chmod +x /usr/bin/kubectl

# Copy to the final image the executables
FROM alpine:${ALPINE_VERSION}
RUN apk add bash git
COPY --from=builder /usr/local/aws-cli/ /usr/local/aws-cli/
COPY --from=builder /aws-cli-bin/ /usr/local/bin/
COPY --from=builder /usr/bin/helm /usr/bin/helm
COPY --from=builder /usr/bin/kubectl /usr/bin/kubectl

# Set bash as entrypoint
ENTRYPOINT ["/bin/bash"]
